третья задача:
import matplotlib.pyplot as plt


from matplotlib.colors import LinearSegmentedColormap

import numpy


def makeData ():
    # Строим сетку в интервале от -10 до 10, имеющую 100 отсчетов по обеим координатам
    x = numpy.linspace (-10, 10, 100)
    y = numpy.linspace (-10, 10, 100)

    # Создаем двумерную матрицу-сетку
    xgrid, ygrid = numpy.meshgrid(x, y)

    # В узлах рассчитываем значение функции
    z = numpy.sin (xgrid) * numpy.sin (ygrid) / (xgrid * ygrid)
    return xgrid, ygrid, z


if __name__ == '__main__':
    x, y, z = makeData()

    fig = plt.figure()
    axes = fig.add_subplot(projection='3d')

    # !!!
    cmap = LinearSegmentedColormap.from_list ('red_blue', ['b', 'w', 'r'], 256)
    axes.plot_surface(x, y, z, color='#11aa55', cmap=cmap)

    plt.show()

вторая задача:

import pandas as pd
import matplotlib.pyplot as plt

file_path = 'книга_1.xlsx'
sheet_name = 'Sheet1'

data = pd.read_excel(file_path, sheet_name=sheet_name)

x = data['X']
y = data['Y']

plt.figure(figsize=(10, 6))
plt.plot(x, y, marker='o')
plt.title('График из Excel')
plt.xlabel('X')
plt.ylabel('Y')
plt.grid()
plt.show()

первая задача:

import openpyxl
import re
from openpyxl.utils import get_column_letter, column_index_from_string

search_text = str("Яков")
print('Ищем:', search_text)
wb = openpyxl.load_workbook("Data.xlsx")
sheets_list = wb.sheetnames
sheet_active = wb[sheets_list[0]]
row_max = sheet_active.max_row
column_max = sheet_active.max_column
row_min = 1
column_min = 1
while column_min <= column_max:
    row_min_min = row_min
    row_max_max = row_max
    while row_min_min <= row_max_max:
        row_min_min = str(row_min_min)
        word_column = get_column_letter(column_min)
        word_column = str(word_column)
        word_cell = word_column + row_min_min
        data_from_cell = sheet_active[word_cell].value
        data_from_cell = str(data_from_cell)
        regular = search_text
        result = re.findall(regular, data_from_cell)
        ws = wb.active
        if len(result) > 0:
            print('Нашли в ячейке:', word_cell, column_index_from_string(word_column))
        row_min_min = int(row_min_min)
        row_min_min = row_min_min + 1
    column_min = column_min + 1



